openapi: 3.0.0
info:
  title: Immediate Payments Solution (IPS) REST API
  description: >

    # Brief


    This is a first draft of an API specification for IPS using the most recent message ISO 20022 message specifications as a baseline.
    
    
    Note: **This implements the full-fat ISO 20022 schemas NOT the internal versions**


    # Messages


    The following messages have been mapped into this specification:


    * Business Application Header (HEAD.001.001.01 - BAH) - Note: **the [XML Signature](https://www.w3.org/TR/xmldsig-core1/) is only used for XML interpretations of request/response payloads**
    
    * FI to FI Customer Credit Transfer (PACS.008.001.07) - Note: **Currently implemented version is PACS.008.001.06 - to be cleaned up when implemented with product**


    Note also that the schemas are created using a generator as a first pass and further refinement is possible and expected.
    
    
    Some notes on specific message types:
    
    * A REST paradigm differs greatly from messaging and some elements of the message construct are not warranted. For example, the BAH indicators of the message type could be removed. However, it may be pragmatic to retain such data to make the transition between REST and messaging easier (bearing in mind this will front an existing product)

    
    # Signing Approach

    When implemented, the BAH **mandates** an XML Signature for identification of the participant. This approach is incompatible with a JSON Payload, so as an alternative a JSON Web Signature (JWS) will be used instead. 
    
    
    The approach is as follows:
    
    * The XML Signature is conveniently an xsd:anyType in the HEAD.001.001.01 schema, meaning the JSON equivilant can be populated with an empty string (in the full-fat schema it is optional but not in the IPS implementation)
    
    * A JSON Web Token (JWT) will be created that carries the same business identifiers as the BAH, either using out-of-the-box or custom claims (custom claims will be indicated using the `crit` attribute).
    
    * The JWT will be signed to create the JWS.
    
    * The payload will then be detached as described [here](https://tools.ietf.org/html/rfc7515#appendix-F).
    
    * The remaining parts of the JWT will be conveyed using a custom HTTP header, nominally `x-jws-signature`.

    # Responses

    All endpoints are specified to return a Payment Status message
    (PACS.002.001.09). However, consumers can also receive HTTP response codes based on well-known scenarios. HTTP response codes communicate the success or failure of the request and **no business scenarios are implied by these response codes unless they accompanied by a Payment Status message**

    # Callbacks

    All request bodies encapsulate a callback URL, allowing out-of-band payments message responses to be sent to consumers:

    * Each PACS message is wrapped in a property/element that specifies the callback URL.

    * The specification uses a `Callback` object from OpenAPI 3.0 to pluck this from the request body. The value is set using the `callbackUrl` property.
    
    * If the `callbackUrl` property is left blank then any Callbacks will be sent using a default URL. Setting the default URL is currently outside the scope of this specification.
    
    # Versioning
    
    **There will be no versioning in the path in this API - and DEFINITELY no nested resources and versioning**


    This specification will be following Z's laws on versioning as defined [here](https://blog.goodapi.co/api-change-management-2fe5bba32e9b).
    
    
    For the sake of sanity versioning of the payloads is not included in this specification - but it's expected to be like so:
  
  
    ```
    Accept: application/com.vocalink.ips.v0.0.1+xml
    ```
    
    
    ```
    Content-Type: application/com.vocalink.ips.v0.0.1+json
    ```
    
    
    **This should be sufficient - and to be frank, why make life more complicated?**. The payload versions will follow the API specification versions i.e. v0.0.1 
    
  version: 0.0.1
paths:
  /payments/credits:
    post:
      tags:
        - Credits
      summary: pacs.008.001.07 - Initiate a credit transfer
      description: Initiate a credit transfer
      parameters:
        - $ref: '#/components/parameters/x-jws-signature'
      security:
        - apiKey: []
        - OAuth: []
      requestBody:
        description: Credit Transfer
        content:
          application/xml:
            schema:
              $ref: '#/components/requestBodies/CreditTransfer'
          application/json:
            schema:
              $ref: '#/components/requestBodies/CreditTransfer'
      responses:
        '201':
          $ref: '#/components/responses/PaymentStatus'
        '400':
          $ref: '#/components/responses/MessageReject'
        '401':
          description: Not authorised
        '403':
          description: Not authorised for this resource
        '429':
          description: Exceed rate limits for resource
      callbacks:
        PaymentStatus:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                $ref: '#/components/requestBodies/ResponseCallback'
              responses:
                '200':
                  description: OK
  /payments/credits/{creditId}:
    get:
      tags:
        - Payments
        - Credits
      summary: pacs.002.001.09 - Get the status of an existing credit transfer on-demand
      description: |
        Get the status of a credit transfer (PACS.008.001.07) by way of a know identifier. Nominally this identifier is a concatenation of:
        
        * Instruction Identification
        * Transaction Identification
        
        However, the actual fields can be refined as required... Note that **this expected to be a synchronous response**
        
      security:
        - apiKey: []
        - OAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PaymentStatus'
        '400':
          $ref: '#/components/responses/MessageReject'
        '401':
          description: Not authorised
        '403':
          description: Not authorised for this resource
        '429':
          description: Exceed rate limits for resource
  /payments/requests:
    post:
      tags:
        - Payments
        - Requests
      summary: pain.013.001.05 - Request for Payment
      description: |
        A request for payment initiated by the creditor (the organisation owed money)
      security:
        - apiKey: []
        - OAuth: []
      requestBody:
        description: Request for Payment
        content:
          application/xml:
            schema:
              $ref: '#/components/requestBodies/RequestForPayment'
          application/json:
            schema:
              $ref: '#/components/requestBodies/RequestForPayment'
      responses:
        '201':
          $ref: '#/components/schemas/PAIN01400105'
        '202':
          description: Request was successfully delivered but no response was received from debtor before responding. Expect response from callback
        '400':
          $ref: '#/components/responses/MessageReject'
        '401':
          description: Not authorised
        '403':
          description: Not authorised for this resource
        '429':
          description: Exceed rate limits for resource
      callbacks:
        PaymentStatus:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                $ref: '#/components/requestBodies/ResponseCallback'
              responses:
                '200':
                  description: OK
components:
  callbacks:
    PaymentStatus:
      '{$request.body#/callbackUrl}':
        post:
          requestBody:
            $ref: '#/components/requestBodies/ResponseCallback'
          responses:
            '200':
              description: OK
  parameters:
    x-jws-signature:
      name: x-jws-signature
      in: header
      description: The JSON Web Signature that replaces the XML Signature for JSON payloads
      required: false
      schema:
        type: string
        format: json-web-token
  requestBodies:
    CreditTransfer:
      description: A credit transfer request with the BAH
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/CreditTransfer'
        application/json:
          schema:
            $ref: '#/components/schemas/CreditTransfer'
    RequestForPayment:
      description: A request for payment request with the BAH
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/RequestForPayment'
        application/json:
          schema:
            $ref: '#/components/schemas/RequestForPayment'
    ResponseCallback:
      description: Further payment status information following initial response
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/CallBack'
        application/json:
          schema:
            $ref: '#/components/schemas/CallBack'
  responses:
    MessageReject:
      description: Message rejected - could not be understood or verified
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/ADMI00200101'
        application/json:
          schema:
            $ref: '#/components/schemas/ADMI00200101'
    PaymentStatus:
      description: Payment Status response body
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/PACS00200109'
        application/json:
          schema:
            $ref: '#/components/schemas/PACS00200109'
  securitySchemes:
    apiKey:
      name: apiKey
      description: API key generated by an API gateway
      type: apiKey
      in: header
    OAuth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://api.example.nowhere/token'
          scopes:
            credit: Make credit transfers
            request: Submit request to pay instructions
            return: Return payments
            status: Collect status reports
  schemas:
    ADMI00200101:
      $ref: 'admi.002.001.01.json#/components/schemas/Document'
    HEAD00100101:
      type: object
      required:
        - AppHdr
      properties:
        AppHdr:
          $ref: 'head.001.001.01.json#/components/schemas/BusinessApplicationHeaderV01'
    PACS00200109:
      $ref: 'pacs.002.001.09.json#/components/schemas/Document'
    PACS00800107:
      $ref: 'pacs.008.001.07.json#/components/schemas/Document'
    PAIN01300105:
      $ref: 'pain.013.001.05.json#/components/schemas/Document'
    PAIN01400105:
      $ref: 'pain.014.001.05.json#/components/schemas/Document'
    REMT00100102:
      $ref: 'remt.001.001.02.json#/components/schemas/Document'
    CallbackUrl:
      type: object
      required:
        - callbackUrl
      properties:
        callbackUrl:
          type: string
    CallBack:
      oneOf:
        - $ref: '#/components/schemas/PACS00200109'
        - $ref: '#/components/schemas/PAIN01400105'
        - $ref: '#/components/schemas/REMT00100102'
    CreditTransfer:
      type: object
      required:
        - Message
      properties:
        Message:
          allOf:
            - $ref: '#/components/schemas/CallbackUrl'
            - $ref: '#/components/schemas/HEAD00100101'
            - $ref: '#/components/schemas/PACS00800107'
    RequestForPayment:
      type: object
      required:
        - Message
      properties:
        Message:
          allOf:
            - $ref: '#/components/schemas/CallbackUrl'
            - $ref: '#/components/schemas/HEAD00100101'
            - $ref: '#/components/schemas/PAIN01300105'
  
